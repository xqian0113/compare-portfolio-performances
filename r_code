# Set Working Directory ---------------------------------------------------

setwd("C:/Users/Xuecong/Onedrive/STA9713")

# Install and Load Packages -----------------------------------------------

install.packages("quantmod")
install.packages("RQuantLib")
install.packages("MASS")
install.packages("downloader")
install.packages("PortfolioAnalytics")
install.packages("fPortfolio")

library(quantmod)
library(RQuantLib)
library(MASS)
library(lattice)
library(PortfolioAnalytics)
library(fPortfolio)

# Get equity Data from Yahoo Finance --------------------------------------

ticker = c('C','YHOO','JPM','MET','TIF','CBS','DIS','EBAY','F','GS',
           'H','INTC','LUV','M','NKE','ORCL','COST', 'COH', 'FB','MCD')
start = "2014-01-01"; end = "2015-11-01"
for (i in 1:length(ticker)) 
  {
  data = getSymbols(ticker[i], src="yahoo", from=start, to=end, adjust=T)
  P_i = t(get(data)[,4])
  R_i =  t(dailyReturn(get(data),type='arithmetic',leading=T))
  if (i == 1) { P = P_i; R = R_i } 
  else { P  = rbind(P, P_i); R = rbind(R, R_i) }
}

# Get benchmark Data SPY
getSymbols('SPY', src="yahoo", from=start, to=end, adjust=T)
P_SPY = t(get('SPY')[,4])
R_SPY = t(dailyReturn(get('SPY'),type='arithmetic',leading=T)) * 252
mu_SPY=mean(R_SPY)
var_SPY=var(t(R_SPY))
sigma_SPY=sqrt(var_SPY)
sharpe_SPY = as.numeric((mu_SPY - 0) / sigma_SPY)


rownames(P) = rownames(R) = ticker

# Get 90-day t-bill (risk-free) rate from St. Louis Federal Reserve Bank --

r_f = as.numeric(tail(get(getSymbols('TB3MS', src="FRED", adjust=T)),n=1))         

# Descriptive Statistics --------------------------------------------------

mu = apply(R, 1, mean) * 252  # means of asset returns
covar = cov(t(R)) * 252 # equivalent to var(t(R))*252
covarinv = ginv(covar) # Moore-Penrose Generalized Inverse of matrix.

# Compute the Efficient Frontier ------------------------------------------

unity  = rep(1,length(mu))
A = as.numeric(t(unity) %*% covarinv %*% unity) # or sum(covarinv)
B = as.numeric(t(unity) %*% covarinv %*% mu) # or sum(covarinv %*% mu)
C = as.numeric(t(mu) %*% covarinv %*% mu)
D = A*C-B^2 # equivalent to determinant

#MVP allowing shorting
mu_MVP=B/A
var_MVP=1/A
sigma_MVP=sqrt(var_MVP)
omega_MVP = covarinv %*% (mu - 0*unity) / A


# Tangency Portfolio with all risky assets-------------------

omega_T1_ = covarinv %*% (mu - 0*unity) / as.numeric(B - A %*% 0)
omega_T1_[omega_T1_<0] <- 0
omega_T1=omega_T1_/sum(omega_T1_) #drop negative omega
mu_T1 = as.numeric(t(omega_T1) %*% mu)
sigma_T1 = as.numeric(sqrt(t(omega_T1) %*% covar %*% omega_T1)) 
sharpe_T1 = as.numeric((mu_T1 - 0) / sigma_T1)
R_j_T1 = t(omega_T1) %*% (R*252)

# Tangency Portfolio with a Risk Free Asset -------------------------------

omega_T = covarinv %*% (mu - r_f*unity) / as.numeric(B - A %*% r_f)
omega_T[omega_T<0] <- 0
omega_T=omega_T/sum(omega_T)
mu_T = as.numeric(t(omega_T) %*% mu) # or ((C-B*r_f)/(B-A*r_f))
sigma_T = as.numeric(sqrt(t(omega_T) %*% covar %*% omega_T)) 
sharpe_T = as.numeric((mu_T - r_f) / sigma_T)
R_j_T = t(omega_T) %*% (R*252)

# Target Return Portfolio with all risky assets (allowing shorting)

mu_tar=0.4 #set target return to 0.4
lambda_target = (C - mu_tar*B)/D
gamma_target =  (mu_tar*A-B)/D
omega_tar =(lambda_target*A)*omega_MVP+(gamma_target*B)*omega_T1_
sigma_tar = as.numeric(sqrt(t(omega_tar) %*% covar %*% omega_tar)) 
sharpe_tar = as.numeric((mu_tar - r_f) / sigma_tar)
R_j_tar = t(omega_tar) %*% (R*252)


########PCA######################################
covmatrix = cov(t(R))
cormatrix = cor(t(R))

eigen(cormatrix)$values

PCA2 = prcomp(t(R), cor=F)
summary(PCA2)
PCA2_var_perc = PCA2$sdev^2/sum(PCA2$sdev^2)
barplot(PCA2_var_perc, ylim=c(0,1), ylab="Var(%)",cex.lab=1.5,cex.axis=2)

cutoff = 0.1
nchoose = sum(PCA2_var_perc/max(PCA2_var_perc)>=cutoff) ## choose first nchoose PCs

RF = t(R) %*% (PCA2$rotation[,1:nchoose])

mydates = as.Date(colnames(R))

par(mfrow=c(3,2))
subTS = zoo(RF[,1], mydates)
subTS = xts(subTS, index(subTS))
plot(subTS[1:462], main='1st PC factor returns',mai=c(-3,0,-3,0)) 
subTS = zoo(RF[,2], mydates) #change Ndays
subTS = xts(subTS, index(subTS))
plot(subTS[1:462], main='2nd PC factor returns',mai=c(-3,0,-3,0)) 
subTS = zoo(RF[,3], mydates)
subTS = xts(subTS, index(subTS))
plot(subTS[1:462], main='3rd PC factor returns',mai=c(-3,0,-3,0))
subTS = zoo(RF[,4], mydates)
subTS = xts(subTS, index(subTS))
plot(subTS[1:462], main='4rd PC factor returns',mai=c(-3,0,-3,0)) 
subTS = zoo(RF[,5], mydates)
subTS = xts(subTS, index(subTS))
plot(subTS[1:462], main='5rd PC factor returns',mai=c(-3,0,-3,0)) 
subTS = zoo(RF[,6], mydates)
subTS = xts(subTS, index(subTS))
plot(subTS[1:462], main='6rd PC factor returns',mai=c(-3,0,-3,0)) 
#dev.off()


### get the regression coefficients beta's
betaT = matrix(NA, nrow=20, ncol=nchoose)
residuals = 0*R
for (i in 1:20){
  temp_lm = lm(R[i,]~RF)
  betaT[i,] = temp_lm$coefficients[-1]
  residuals[i,] = temp_lm$residuals
}
colnames(betaT) = colnames(RF)
rownames(betaT) = rownames(R)
par(mfrow=c(2,1))
hist(cor(t(residuals)))  
hist(cor(t(R)))   

## Approximated covariance and correlation matrix on returns
Sigma_R_est = betaT %*% cov(RF) %*% t(betaT) + 
  diag(diag(cov(t(residuals))))

Sigma_R_est=Sigma_R_est*252
Sigma_R_est_inv=ginv(Sigma_R_est)
Mu_R_est = apply(R, 1, mean) * 252  # means of asset returns

pca_unity  = rep(1,length(Mu_R_est))
pca_A = as.numeric(t(pca_unity) %*% Sigma_R_est_inv %*% pca_unity) # or sum(covarinv)
pca_B = as.numeric(t(pca_unity) %*% Sigma_R_est_inv %*% Mu_R_est) # or sum(covarinv %*% mu)
pca_C = as.numeric(t(Mu_R_est) %*% Sigma_R_est_inv %*% Mu_R_est)
pca_D = pca_A*pca_C-pca_B^2 # equivalent to determinant

# PCA Tangency Portfolio with a Risk Free Asset -------------------------------

pca_omega_T = Sigma_R_est_inv %*% (Mu_R_est - r_f*pca_unity) / as.numeric(pca_B - pca_A %*% r_f)
pca_omega_T[pca_omega_T<0] <- 0
pca_omega_T=pca_omega_T/sum(pca_omega_T)
pca_mu_T = as.numeric(t(pca_omega_T) %*% Mu_R_est) # or ((C-B*r_f)/(B-A*r_f))
pca_sigma_T = as.numeric(sqrt(t(pca_omega_T) %*% Sigma_R_est %*% pca_omega_T)) 
pca_sharpe_T = as.numeric((pca_mu_T - r_f) / pca_sigma_T)
pca_R_j = t(pca_omega_T) %*% (R*252)

